package com.adk.db.pingpong;
// Generated Dec 1, 2016 12:08:39 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.xml.bind.annotation.XmlRootElement;

/**
 * PlayerDetails generated by hbm2java
 */
@XmlRootElement 
public class PlayerDetails implements java.io.Serializable {

	private Integer playerId;
	private String playerName;
	private String fatherName;
	private String motherName;
	private String occupation;
	private Date dob;
	private Date dateOfJoining;
	private String mobileNumber;
	private String address;
	private int age;
	private byte isParentPlayer;
	private byte isParentWillingToLearn;
	private byte isParentRefere;
	private Set playerScoreDetailses = new HashSet(0);

	public PlayerDetails() {
	}

	public PlayerDetails(String playerName, String fatherName, String motherName, String occupation, Date dob,
			Date dateOfJoining, String mobileNumber, String address, int age, byte isParentPlayer,
			byte isParentWillingToLearn, byte isParentRefere) {
		this.playerName = playerName;
		this.fatherName = fatherName;
		this.motherName = motherName;
		this.occupation = occupation;
		this.dob = dob;
		this.dateOfJoining = dateOfJoining;
		this.mobileNumber = mobileNumber;
		this.address = address;
		this.age = age;
		this.isParentPlayer = isParentPlayer;
		this.isParentWillingToLearn = isParentWillingToLearn;
		this.isParentRefere = isParentRefere;
	}

	public PlayerDetails(String playerName, String fatherName, String motherName, String occupation, Date dob,
			Date dateOfJoining, String mobileNumber, String address, int age, byte isParentPlayer,
			byte isParentWillingToLearn, byte isParentRefere, Set playerScoreDetailses) {
		this.playerName = playerName;
		this.fatherName = fatherName;
		this.motherName = motherName;
		this.occupation = occupation;
		this.dob = dob;
		this.dateOfJoining = dateOfJoining;
		this.mobileNumber = mobileNumber;
		this.address = address;
		this.age = age;
		this.isParentPlayer = isParentPlayer;
		this.isParentWillingToLearn = isParentWillingToLearn;
		this.isParentRefere = isParentRefere;
		this.playerScoreDetailses = playerScoreDetailses;
	}

	public Integer getPlayerId() {
		return this.playerId;
	}

	public void setPlayerId(Integer playerId) {
		this.playerId = playerId;
	}

	public String getPlayerName() {
		return this.playerName;
	}

	public void setPlayerName(String playerName) {
		this.playerName = playerName;
	}

	public String getFatherName() {
		return this.fatherName;
	}

	public void setFatherName(String fatherName) {
		this.fatherName = fatherName;
	}

	public String getMotherName() {
		return this.motherName;
	}

	public void setMotherName(String motherName) {
		this.motherName = motherName;
	}

	public String getOccupation() {
		return this.occupation;
	}

	public void setOccupation(String occupation) {
		this.occupation = occupation;
	}

	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	public Date getDateOfJoining() {
		return this.dateOfJoining;
	}

	public void setDateOfJoining(Date dateOfJoining) {
		this.dateOfJoining = dateOfJoining;
	}

	public String getMobileNumber() {
		return this.mobileNumber;
	}

	public void setMobileNumber(String mobileNumber) {
		this.mobileNumber = mobileNumber;
	}

	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public int getAge() {
		return this.age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public byte getIsParentPlayer() {
		return this.isParentPlayer;
	}

	public void setIsParentPlayer(byte isParentPlayer) {
		this.isParentPlayer = isParentPlayer;
	}

	public byte getIsParentWillingToLearn() {
		return this.isParentWillingToLearn;
	}

	public void setIsParentWillingToLearn(byte isParentWillingToLearn) {
		this.isParentWillingToLearn = isParentWillingToLearn;
	}

	public byte getIsParentRefere() {
		return this.isParentRefere;
	}

	public void setIsParentRefere(byte isParentRefere) {
		this.isParentRefere = isParentRefere;
	}

	public Set getPlayerScoreDetailses() {
		return this.playerScoreDetailses;
	}

	public void setPlayerScoreDetailses(Set playerScoreDetailses) {
		this.playerScoreDetailses = playerScoreDetailses;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((address == null) ? 0 : address.hashCode());
		result = prime * result + age;
		result = prime * result + ((dateOfJoining == null) ? 0 : dateOfJoining.hashCode());
		result = prime * result + ((dob == null) ? 0 : dob.hashCode());
		result = prime * result + ((fatherName == null) ? 0 : fatherName.hashCode());
		result = prime * result + isParentPlayer;
		result = prime * result + isParentRefere;
		result = prime * result + isParentWillingToLearn;
		result = prime * result + ((mobileNumber == null) ? 0 : mobileNumber.hashCode());
		result = prime * result + ((motherName == null) ? 0 : motherName.hashCode());
		result = prime * result + ((occupation == null) ? 0 : occupation.hashCode());
		result = prime * result + ((playerId == null) ? 0 : playerId.hashCode());
		result = prime * result + ((playerName == null) ? 0 : playerName.hashCode());
		result = prime * result + ((playerScoreDetailses == null) ? 0 : playerScoreDetailses.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PlayerDetails other = (PlayerDetails) obj;
		if (address == null) {
			if (other.address != null)
				return false;
		} else if (!address.equals(other.address))
			return false;
		if (age != other.age)
			return false;
		if (dateOfJoining == null) {
			if (other.dateOfJoining != null)
				return false;
		} else if (!dateOfJoining.equals(other.dateOfJoining))
			return false;
		if (dob == null) {
			if (other.dob != null)
				return false;
		} else if (!dob.equals(other.dob))
			return false;
		if (fatherName == null) {
			if (other.fatherName != null)
				return false;
		} else if (!fatherName.equals(other.fatherName))
			return false;
		if (isParentPlayer != other.isParentPlayer)
			return false;
		if (isParentRefere != other.isParentRefere)
			return false;
		if (isParentWillingToLearn != other.isParentWillingToLearn)
			return false;
		if (mobileNumber == null) {
			if (other.mobileNumber != null)
				return false;
		} else if (!mobileNumber.equals(other.mobileNumber))
			return false;
		if (motherName == null) {
			if (other.motherName != null)
				return false;
		} else if (!motherName.equals(other.motherName))
			return false;
		if (occupation == null) {
			if (other.occupation != null)
				return false;
		} else if (!occupation.equals(other.occupation))
			return false;
		if (playerId == null) {
			if (other.playerId != null)
				return false;
		} else if (!playerId.equals(other.playerId))
			return false;
		if (playerName == null) {
			if (other.playerName != null)
				return false;
		} else if (!playerName.equals(other.playerName))
			return false;
		if (playerScoreDetailses == null) {
			if (other.playerScoreDetailses != null)
				return false;
		} else if (!playerScoreDetailses.equals(other.playerScoreDetailses))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "PlayerDetails [playerId=" + playerId + ", playerName=" + playerName + ", fatherName=" + fatherName
				+ ", motherName=" + motherName + ", occupation=" + occupation + ", dob=" + dob + ", dateOfJoining="
				+ dateOfJoining + ", mobileNumber=" + mobileNumber + ", address=" + address + ", age=" + age
				+ ", isParentPlayer=" + isParentPlayer + ", isParentWillingToLearn=" + isParentWillingToLearn
				+ ", isParentRefere=" + isParentRefere + ", playerScoreDetailses=" + playerScoreDetailses + "]";
	}

	
}
